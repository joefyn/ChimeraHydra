name: chimera-gate

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

permissions:
  contents: read
  issues: read
  statuses: write

jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: gate → pending
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              sha,
              state: 'pending',
              context: 'gate',
              description: 'gate running'
            });

      - name: require label ok-to-merge
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request?.number;
            if (!pr) core.setFailed("No PR number in context.");
            const { data: labels } = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              issue_number: pr
            });
            const hasOk = labels.some(l => (l.name || "").toLowerCase() === "ok-to-merge");
            core.info(`ok-to-merge label: ${hasOk}`);
            if (!hasOk) core.setFailed("Gate FAIL: add label 'ok-to-merge' to pass.");

      - name: gate → conclude
        if: ${{ always() }}
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.payload.pull_request?.head.sha ?? context.sha;
            const ok  = "${{ job.status }}" === "success";
            await github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              sha,
              state: ok ? 'success' : 'failure',
              context: 'gate',
              description: ok ? 'gate passed' : 'gate failed'
            });

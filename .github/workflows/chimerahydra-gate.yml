name: chimera-gate

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:

# Minimal, explicit permissions. Statuses are required for the legacy commit-status gate.
permissions:
  contents: read
  statuses: write

jobs:
  gate:
    name: gate
    runs-on: ubuntu-latest
    # Job-level permissions (defensive duplication; safe if workflow-level also present)
    permissions:
      contents: read
      statuses: write

    steps:
      - name: Gate decision (WIP-title policy → success/failure)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // ===== BEGIN [CHIMERA-GATE-V1] =====
            // Preserve exact context string used by branch protection
            const CONTEXT = "chimera-gate / gate";

            // Resolve the correct SHA: PR head on pull_request, otherwise the workflow's commit
            const sha = (context.payload.pull_request && context.payload.pull_request.head && context.payload.pull_request.head.sha) || context.sha;

            // PR title if present (empty when not a PR-driven run)
            const title = (context.payload.pull_request && context.payload.pull_request.title) || "";

            // Policy: fail iff title starts with "WIP" (case-insensitive, optional punctuation)
            const isWip = /^\s*WIP\b[:\-\s]?/i.test(title);

            const state = isWip ? "failure" : "success";
            const description = isWip
              ? "Gate failed: PR title begins with WIP → rename title to pass"
              : "Gate passed: title policy satisfied";

            const target_url = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;

            // Write legacy commit status (this is what branch protection enforces)
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: CONTEXT,
              description,
              target_url,
            });

            core.info(`Gate decision = ${state} on ${sha} (title="${title}")`);
            // ===== END [CHIMERA-GATE-V1] =====

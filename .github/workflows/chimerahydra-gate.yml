name: chimera-gate

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted, edited, dismissed]

concurrency:
  group: chimera-gate-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  statuses: write

defaults:
  run:
    shell: bash

jobs:
  gate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      PR_NUMBER: ${{ github.event.pull_request.number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: gate status → pending
        if: ${{ always() }}
        run: |
          curl --fail-with-body -sS -X POST \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${HEAD_SHA}" \
            -d '{"state":"pending","context":"gate","description":"gate running"}'

           - name: Evaluate approvals OR label
        id: eval
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          set -euo pipefail
          repo="${{ github.repository }}"
          auth=(-H "Authorization: Bearer ${{ github.token }}" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28")

          reviews_json="$(curl -sS "${auth[@]}" "https://api.github.com/repos/$repo/pulls/${PR_NUMBER}/reviews")"
          approvals=$(echo "$reviews_json" | jq '[ group_by(.user.login)[] | last | select(.state=="APPROVED") ] | length')

          labels_json="$(curl -sS "${auth[@]}" "https://api.github.com/repos/$repo/issues/${PR_NUMBER}/labels")"
          has_label=$(echo "$labels_json" | jq -r 'any(.[]?; (.name|ascii_downcase)=="ok-to-merge")')

          echo "Approvals: $approvals  Label ok-to-merge: $has_label"

          if [ "$approvals" -ge 1 ] || [ "$has_label" = "true" ]; then
            echo "Gate PASS (approval or ok-to-merge label)."
          else
            echo "Gate FAIL: need 1 approval or add label 'ok-to-merge'." >&2
            exit 1
          fi

      - name: gate status → conclude
        if: ${{ always() }}
        env:
          JOB_STATUS: ${{ job.status }}
        run: |
          if [ "$JOB_STATUS" = "success" ]; then
            STATE=success; DESC="gate passed"
          else
            STATE=failure; DESC="gate failed"
          fi
          curl --fail-with-body -sS -X POST \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${HEAD_SHA}" \
            -d "{\"state\":\"$STATE\",\"context\":\"gate\",\"description\":\"$DESC\"}"
